name: Verify

# Controls when the action will run.
on:
  workflow_call:
    outputs:
      status:
        description: The status of the job
        value: ${{ jobs.verify.outputs.status }}
    secrets:
      IBMCLOUD_API_KEY:
        required: true
      # OPENSHIFT_SERVER:
      #   required: true
      # OPENSHIFT_USER:
      #   required: true
      # OPENSHIFT_PASSWORD:
      #   required: true
      # GITHUB_PAT:
      #   required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # install_runner:
  #   name: Install Runner
  #   runs-on: ubuntu-20.04

  #   steps:
  #     - name: Log in to OpenShift
  #       uses: redhat-actions/oc-login@v1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
  #         openshift_username: ${{ secrets.OPENSHIFT_USER }}
  #         openshift_password: ${{ secrets.OPENSHIFT_PASSWORD }}

  #     - uses: redhat-actions/openshift-actions-runner-installer@v1
  #       with:
  #         github_pat: ${{ secrets.GITHUB_PAT }}     # Personal access token with organization permissions
  #         runner_image: quay.io/cloudnativetoolkit/github-terraform-runner
  #         runner_tag: cli-tools-ibmcloud
  #         runner_labels: cli-tools-ibmcloud
  #         runner_replicas: 2
  #         helm_extra_args: |
  #           --set-string secretName=github-pat-ibm-fscloud
  # verify:
  #   needs: install_runner
  #   runs-on: [ self-hosted, cli-tools-ibmcloud ]

  verify:
    runs-on: ubuntu-latest
    container:
      image: quay.io/cloudnativetoolkit/cli-tools-ibmcloud:v1.2-v0.4.23
      options: --privileged

    strategy:
      matrix:
        architecture:
          - ocp
          - vpc
      fail-fast: false

    env:
      HOME: /home/devops
      IBMCLOUD_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
      TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}

    outputs:
      status: ${{ job.status }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        #uses: actions/checkout@v3
        # with:
        #   path: main

      - name: Terraform Apply - ${{ matrix.architecture }}
        run: |
          RANDOM_PREFIX=$(echo $RANDOM | md5sum | head -c 5; echo)

          #cd main
          sudo ./setup-workspace.sh -t small -a ${{ matrix.architecture }} -n "fs-${RANDOM_PREFIX}" -r eu-de
          sudo chown -R devops ../workspaces/current
          cd ../workspaces/current
          
          echo ""
          echo "*** Start terraform.tfvars ***"
          cat terraform.tfvars
          echo "*** End terraform.tfvars ***"
          echo ""
          
          ./apply-all.sh

      - name: Terraform Destroy - ${{ matrix.architecture }}
        if: ${{ always() }}
        run: |
          cd ../workspaces/current
          ./destroy-all.sh
